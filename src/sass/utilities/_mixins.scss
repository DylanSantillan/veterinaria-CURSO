@use '../utilities/variables' as v;

/* *************************** */
/* FLEXBOX */
/* *************************** */

@mixin flex( $direction , $corte , $just , $align ){
    display         : flex;
    flex-flow       : $direction $corte;
    justify-content : $just;
    align-items     : $align;
}

/* *************************** */
/* MEDIA QUERIES */
/* *************************** */

@mixin media( $medida ){
    @media screen and (min-width:$medida){
        @content
    }
};

/* *************************** */
/* TITLE */
/* *************************** */

@mixin title( $weight, $size, $align ){
    font-weight: $weight;
    font-size: $size;
    text-align: $align;
}

/* *************************** */
/* NEOMORPHISM */
/* *************************** */

@mixin neo( $distance, $intensity,  $inset ){
    @if $inset == true {

        box-shadow:
            0 0 0 mix(v.$s-oscuro, transparent, $intensity),
            0 0 0 mix(v.$s-claro, transparent, $intensity),
            $distance $distance calc($distance*2) mix(v.$s-oscuro, transparent, $intensity) inset,
            -#{$distance} -#{$distance} calc($distance*2) mix(v.$s-claro, transparent, $intensity) inset;

    } @else if $inset == false {

        box-shadow:
        $distance $distance calc($distance*2) mix(v.$s-oscuro, transparent, $intensity),
        -#{$distance} -#{$distance} calc($distance*2) mix(v.$s-claro, transparent, $intensity),
        0 0 0 mix(v.$s-oscuro, transparent, $intensity) inset,
        0 0 0 mix(v.$s-claro, transparent, $intensity) inset;
    }
}

/* *************************** */
/* NEOMORPHISM */
/* *************************** */

@mixin neoD( $distance, $intensity,  $inset ){
    @if $inset == true {

        box-shadow:
            0 0 0 mix(v.$s-oscuro, transparent, $intensity),
            0 0 0 mix(v.$s-claro, transparent, $intensity),
            $distance $distance calc($distance*2) mix(v.$sd-oscuro, transparent, $intensity) inset,
            -#{$distance} -#{$distance} calc($distance*2) mix(v.$sd-claro, transparent, $intensity) inset;

    } @else if $inset == false {

        box-shadow:
        $distance $distance calc($distance*2) mix(v.$sd-oscuro, transparent, $intensity),
        -#{$distance} -#{$distance} calc($distance*2) mix(v.$sd-claro, transparent, $intensity),
        0 0 0 mix(v.$s-oscuro, transparent, $intensity) inset,
        0 0 0 mix(v.$s-claro, transparent, $intensity) inset;
    }
}

/* *************************** */
/* BUTTON */
/* *************************** */

@mixin button($bg, $bgh){
    padding: 1rem .9rem;
    width: 100%;
    border-radius: .8rem;
    text-transform: uppercase;
    font-weight: 600;
    color: v.$c-blanco;
    background-color: $bg;
    border: 4px solid v.$c-blanco;
    transition: background-color .4s, transform .1s;
    cursor: pointer;
    
    &:hover{
        background-color: $bgh;
    }
    
    &:active{
        transform: scale(.98);
    }
    
    body.dark &{
        border: 4px solid v.$c-negro;
    }
}